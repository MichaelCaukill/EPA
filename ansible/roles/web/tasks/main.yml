---
# Install dependencies
- name: Install apt dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  become: yes

# Add Docker GPG key
- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

# Add Docker APT repository
- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  become: yes

# Install Docker
- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes
  become: yes

# Ensure Docker is running
- name: Ensure Docker is running
  systemd:
    name: docker
    enabled: yes
    state: started
  become: yes

# Add ubuntu user to docker group
- name: Add user to Docker group
  user:
    name: ubuntu
    groups: docker
    append: yes
  become: yes

# Ensure Docker Compose plugin directory exists
- name: Create Docker CLI plugin directory
  file:
    path: /usr/local/lib/docker/cli-plugins
    state: directory
    mode: '0755'
  become: yes

# Install Docker Compose plugin
- name: Install Docker Compose plugin
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64
    dest: /usr/local/lib/docker/cli-plugins/docker-compose
    mode: '0755'
  become: yes

# Create app directory
- name: Ensure /opt/epa directory exists
  file:
    path: /opt/epa
    state: directory
    mode: '0755'
  become: yes

- name: Copy docker-compose file
  copy:
    src: "{{ playbook_dir }}/../docker-compose.yml"
    dest: /opt/epa/docker-compose.yml
    mode: '0644'

- name: Copy environment file
  copy:
    src: "{{ playbook_dir }}/../.env"
    dest: /opt/epa/.env
    mode: '0600'

# Run Docker Compose
- name: Run Docker Compose
  command: docker compose up -d
  args:
    chdir: /opt/epa
  become: yes

- name: Ensure Nginx is installed
  apt:
    name: nginx
    state: present
    update_cache: yes
  become: yes

- name: Copy Nginx config template for Flask
  template:
    src: nginx_flask.j2
    dest: /etc/nginx/sites-available/flask_app
    force: yes
  notify: Reload Nginx
  become: yes

- name: Remove default Nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Enable Flask Nginx site
  file:
    src: /etc/nginx/sites-available/flask_app
    dest: /etc/nginx/sites-enabled/flask_app
    state: link
    force: yes
  become: yes
