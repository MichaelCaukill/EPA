# roles/web/tasks/main.yml

- name: Ensure app directory exists
  file:
    path: /opt/app
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
  become: yes

- name: Copy application files to EC2 instance
  copy:
    src: ../../app/
    dest: /opt/app/
    owner: ubuntu
    group: ubuntu
  become: yes

- name: Ensure Python 3 venv package is installed
  apt:
    name: python3-venv
    state: present
    update_cache: yes
  become: yes

- name: Create virtual environment
  command: python3 -m venv /opt/app/venv
  args:
    creates: /opt/app/venv/bin/activate
  become: yes

- name: Install Python requirements
  command: /opt/app/venv/bin/pip install -r /opt/app/requirements.txt
  become: yes

- name: Start Flask app with Gunicorn (temporary)
  shell: |
    /opt/app/venv/bin/gunicorn --chdir /opt/app app:app --bind 127.0.0.1:8000 --daemon
  args:
    executable: /bin/bash
  become: yes

- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes
  become: yes

- name: Copy Nginx config template
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/flask_app
  become: yes

- name: Remove default Nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Enable Flask Nginx site
  file:
    src: /etc/nginx/sites-available/flask_app
    dest: /etc/nginx/sites-enabled/flask_app
    state: link
    force: yes
  become: yes

- name: Restart Nginx
  service:
    name: nginx
    state: restarted
  become: yes

- name: Install MySQL server
  apt:
    name: mysql-server
    state: present
    update_cache: yes
  become: yes

- name: Ensure MySQL is running
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes

- name: Install PyMySQL for Ansible
  apt:
    name: python3-pymysql
    state: present
  become: yes

- name: Set MySQL root password with native authentication
  shell: |
    mysql -u root <<EOF
    ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';
    FLUSH PRIVILEGES;
    EOF
  args:
    executable: /bin/bash
  become: yes

- name: Create MySQL root credentials file
  copy:
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: '0600'
    content: |
      [client]
      user = root
      password = {{ mysql_root_password }}
  become: yes

- name: Create MySQL database
  community.mysql.mysql_db:
    name: epadb
    state: present
  become: yes

- name: Create MySQL application user
  community.mysql.mysql_user:
    name: "{{ app_db_user }}"
    password: "{{ app_db_password }}"
    priv: "epadb.*:ALL"
    host: localhost
    state: present
  become: yes
